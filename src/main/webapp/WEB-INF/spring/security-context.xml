<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

<bean id="customAccessDenied" class="com.kjy.security.CustomAccessDeniedHandler"></bean>

<security:http>
	<!-- 특정 URL 에 접근할 때 인터셉터를 이용해서 접근을 제한하는 설정, pattern 은 URI 의 패턴을 의미  access의 경우는 권한을 체크 -->
	<security:intercept-url pattern="/sample/all" access="permitAll"/>
	
	<security:intercept-url pattern="/sample/member" access="hasRole('ROLE_MEMBER')"/>
	
	<!-- 권한 부여 -->
	<security:intercept-url pattern="/sample/admin" access="hasRole('ROLE_ADMIN')"/>
	
	<!-- 접근 제한시 AccessDeniedHandler을 구현하거나 특정 URI 를 지정 -->
	<!-- <security:access-denied-handler error-page="/accessError"/> -->
	<security:access-denied-handler ref="customAccessDenied"/>
	<security:form-login/>
</security:http>
<security:authentication-manager>

	<security:authentication-provider>
		<security:user-service>
			<security:user name="member" password="{noop}member" authorities="ROLE_MEMBER"/>
			
			<!-- admin 접속 권한 설정 -->
			<security:user name="admin" password="{noop}admin" authorities="ROLE_MEMBER, ROLE_ADMIN"/>
		</security:user-service>
	</security:authentication-provider>

</security:authentication-manager>
</beans>
